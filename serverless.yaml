service: outil

plugins:
  - 'serverless-plugin-typescript'
  - serverless-plugin-optimize
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  region: ca-central-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
          Resource: 'arn:aws:s3:::${self:custom.inputBucket}/*'
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:PutObjectAcl
            - s3:GetObject
          Resource: 'arn:aws:s3:::${self:custom.outputBucket}/*'
        - Effect: Allow
          Action:
            - s3:ListBucket
          Resource: 'arn:aws:s3:::${self:custom.inputBucket}'
        - Effect: Allow
          Action:
            - s3:ListBucket
          Resource: 'arn:aws:s3:::${self:custom.outputBucket}'

functions:
  main:
    handler: src/lambda-main.handler
    events:
      - http:
          method: any
          path: /{any+}
    layers:
      - !Sub arn:aws:lambda:ca-central-1:${AWS::AccountId}:layer:ffmpeg:1
  listStorage:
    handler: src/lambda-list-storage.handler
    events:
      - schedule: rate(1 minute)

resources:
  Resources:
    S3InputBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.inputBucket}
    S3OutputBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.outputBucket}

custom:
  inputBucket: ${file(env.yml):INPUT_BUCKET}-${opt:stage, 'dev'}
  outputBucket: ${file(env.yml):OUTPUT_BUCKET}-${opt:stage, 'dev'}
